name: Docker Build and Push

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/kubernetes-demo-api:latest
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=prod-{{date 'YYYYMMDD-HHmmss'}},enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=DevOps API
            org.opencontainers.image.description=A Node.js DevOps API application
            org.opencontainers.image.vendor=DevOps Team

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: production
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

      - name: Generate deployment summary
        if: always()
        run: |
          echo "## 🐳 Docker Build and Push Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ **Docker image successfully built and pushed!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📦 Published Image Details:" >> $GITHUB_STEP_SUMMARY
            echo "- **Repository**: \`${{ secrets.DOCKER_USERNAME }}/devops\`" >> $GITHUB_STEP_SUMMARY
            echo "- **Platforms**: \`linux/amd64\`, \`linux/arm64\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🏷️ Image Tags:" >> $GITHUB_STEP_SUMMARY
            
            # Parse and display tags
            TAGS="${{ steps.meta.outputs.tags }}"
            for tag in $TAGS; do
              echo "- \`$tag\`" >> $GITHUB_STEP_SUMMARY
            done
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📋 Usage:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "# Pull the latest image" >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${{ secrets.DOCKER_USERNAME }}/devops:latest" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "# Run the container" >> $GITHUB_STEP_SUMMARY
            echo "docker run -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/devops:latest" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Docker build/push failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the workflow logs for details." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Docker image vulnerability scan
        if: success()
        uses: aquasec/trivy-action@v0.21.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/kubernetes-demo-api:latest
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        if: success()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
