version: '3.8'

services:
  # Neon Local Proxy - Creates ephemeral database branches
  neon-local:
    image: neondatabase/neon_local:latest
    container_name: neon-local-dev
    ports:
      - "5432:5432"
    env_file:
      - .env.development
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-U", "neon"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: devops-app-dev
    ports:
      - "3000:3000"
    env_file:
      - .env.development
    volumes:
      # Mount source code for hot reload in development
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      # Create named volume for node_modules to avoid conflicts
      - node_modules:/app/node_modules
      # Mount logs directory
      - ./logs:/app/logs
    depends_on:
      neon-local:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  node_modules:

networks:
  app-network:
    driver: bridge